double findMedianSortedArrays(int* nums1, int nums1Size, int* nums2, int nums2Size) {
    bool even=true;
    if((nums1Size+nums2Size)%2==1){
        //nums1&2 size sums is odd
        even=false;
    }
    double ans;
    int mid=(nums1Size+nums2Size)/2;
    int count=0;
    int temp;
    int i=0,j=0;//i for nums1,j for nums2
    //無論odd or even 都先一起往前走
    while(count<mid){
        if(i==nums1Size){// When the nums1 array index reaches the end. 
            temp=nums2[j];
            j++;
        }
        else if(j==nums2Size){//When the nums2 array index reaches the end. 
            temp=nums1[i];
            i++;
        }
        else if(nums1[i]<nums2[j]){
            temp=nums1[i];
            i++;
        }
        else{
            temp=nums2[j];
            j++;
        }
        count++;
    }
    //even的ans
    if(even){
        int temp2;
        if(i==nums1Size){
            temp2=nums2[j];
            j++;
        }
        else if(j==nums2Size){
            temp2=nums1[i];
            i++;
        }
        else if(nums1[i]<nums2[j]){
            temp2=nums1[i];
            i++;
        }
        else{
            temp2=nums2[j];
            j++;
        }
        return (double)(temp+temp2)/2;
    }
    //odd的ans
    else{
        if(i==nums1Size){
            temp=nums2[j];
            j++;
        }
        else if(j==nums2Size){
            temp=nums1[i];
            i++;
        }
        else if(nums1[i]<nums2[j]){
            temp=nums1[i];
            i++;
        }
        else{
            temp=nums2[j];
            j++;
        }
        return temp;
    }
}
